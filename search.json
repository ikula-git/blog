[{"title":"esp-32","url":"/309fe4ca/","content":"# 嵌入式开发开始    \n\n# 测试二次提交\n\n```javascript\nfunction helloWorld() {\nconsole.log('Hello, world!');\n}\n```","tags":["新手","菜鸟"],"categories":["micro python","嵌入式开发"]},{"title":"NVidia-driver","url":"/8a833a3e/","content":"\n当我们使用unraid的应用市场安装NVidia驱动的时候，很容易遇到安装界面像卡住一样，进度条也一直不动（其中根本就不在前端web页面展示进度条，以及国内糟糕的网络环境，况且这个驱动包也是算比较大的\n\n![](https://content.invisioncic.com/u329766/monthly_2023_07/image.thumb.png.17e52d194a35a91e1c9e6b555e52c13e.png)\n\n```bash\n#进入boot分区的Plugins目录内\ncd /boot/config/plugins/nvidia-driver/packages\n#查看版本号\nls\n```\n\n本人机器是为6.1.74版本的\n\n![](/images/unraid/nvidia-driver-version.jpg)\n\n然后去[Releases](https://github.com/ich777/unraid-nvidia-driver/releases)页面下载对于版本的驱动文件（zip）和校验文件（md5）\n\n![](/images/unraid/page-version.jpg)\n\n> 🔔\n>\n> 一定要下载校验文件，不然可能导致无法开机\n\n**最后希望看到这篇文章的人能给[作者](https://github.com/ich777/unraid-nvidia-driver)点个⭐**\n","tags":["折腾","踩坑"],"categories":["Linux","NAS","unraid"]},{"title":"unraid-git","url":"/1b21edb2/","content":"\n# unraid设置永久保存git相关配置\n\nunraid作为一个定制化的NAS系统，在开机重启后会重置掉非数据分区的数据和设置，所以默认命令生成的git公私钥就要备份到数据分区存储，然后设置开机自动将配置文件加载到默认位置\n\n```bash\n# 配置Git\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n# 生成ssh密钥\nssh-keygen -t ed25519 -C \"you@example.com\"\n```\n\n# 复制密钥到数据区永久保存\n\n```bash\n#假设想要存储在 \n/boot/config/git/.ssh\n#创建目录\nmkdir /boot/config/git/.ssh\n#备份密钥\ncp /root/.ssh/id_rsa /boot/config/git/.ssh/id_rsa\ncp /root/.ssh/id_rsa /boot/config/git/.ssh/id_rsa.pub\n```\n\n# 设置开机自动加载\n\n```bash\n# 编辑boot分区的go文件\nnano /boot/config/go\n\n# 将下面代码追加到文件末尾\n# 复制SSH密钥到root用户的.ssh目录\nmkdir -p /root/.ssh\ncp /boot/config/git/.ssh/id_rsa /root/.ssh/id_rsa\ncp /boot/config/git/.ssh/id_rsa.pub /root/.ssh/id_rsa.pub\n\n# 设置权限\nchmod 600 /root/.ssh/id_rsa\nchmod 644 /root/.ssh/id_rsa.pub\n\n# 配置Git\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\ngit config --global core.sshCommand \"ssh -i /root/.ssh/id_rsa\"\n\necho \"SSH keys and Git configuration have been set up.\"\n```\n\n","tags":["折腾"],"categories":["Linux","NAS","unraid"]},{"title":"证书签发","url":"/83dcefb7/","content":"# 利用acme.sh进行证书签发\n\n## 安装\n\n```bash\n#官方\ncurl https://get.acme.sh | sh\n#国内\ncurl https://gitee.com/neilpang/acme.sh | sh\n```\n\n## 安装letsencrypt服务 \n\n```bash\n#最新版acme默认已经安装此服务\nacme.sh --set-default-ca --server letsencryp\n```\n\n## 申请证书\n\n```bash\nacme.sh  --issue  -d domain.com -d www.domain.com  --webroot /home/domain.com/\n```\n\n## 如出现如下错误 \n\n```bash\n#unraid在重启后安装后会出现如下错误\n-bash: acme.sh: command not found \n```\n\n## 解决办法\n\n```bash\n#这里是指在unraid环境下用root账户执行acme的安装\ncd /root/.acme.sh/  \nalias acme.sh=~/.acme.sh/acme.sh\n#测试是否正常使用acme.sh\nacme.sh -h\t\t\t\n```\n\n","categories":["Linux","NAS","unraid"]},{"title":"青猪圣地巡游","url":"/7f0b2dfc/","content":"# 线路图\n\n![路线图](/images/japan/map.jpg)\n\n起点从藤沢站出发，经过江之岛水族馆，江之岛，腰越，镰仓高校前，七里滨。对青猪圣地的圣地巡游（非完全版），拍照取点位置如如上所示。\n\n------\n\n## **藤泽站**\n\n到达藤泽站出来后，在南边的出口就是第一个取景点\n\n![](/images/japan/藤泽站-1.jpg)\n\n![](/images/japan/藤泽站-2.jpg)\n\n往车站里面走就可以看到学姐与咲太在动漫内存储柜的场景\t\n\n*##本人先是从小田急江之岛线到达藤泽站，然后在换成江之岛电铁线去往江之岛*\n\n cd /root/.acme.sh/  #   这里是指在unraid环境下用root账户执行acme的安装alias acme.sh=~/.acme.sh/acme.shacme.sh -h          #   测试是否正常使用acme.shbash\n\n![](/images/japan/藤泽站-4.jpg)\n\n继续往站内走到达江之岛电铁线的藤泽站闸机口\n\n![](/images/japan/藤泽站-5.jpg)\n\n![](/images/japan/藤泽站-6.jpg)\n\n进站后就可以看到一个标志性建筑--时钟，跟动漫内的还是有点不一样，可能是重新装修了\n\n![](/images/japan/藤泽站-7.jpg)\n\n## **江之岛水族馆**\n\n搭乘江之岛电铁线到达江之岛站后下车，大概走个1km左右就可以看到水族馆了，这个也是咲太和学妹一起去江之岛约会出现的场景\n\n![](/images/japan/水族馆-1.jpg)\n\n![](/images/japan/水族馆-2.jpg)\n\n## **江之岛**\n\n从水族馆离开后前往江之岛大桥，在过马路的地下通道以及旁边的沙滩都是动漫内多次出现的场景，地下通道则是咲太与学妹约会的时候出现的\n\n![](/images/japan/江之岛-1.jpg)\n\n![](/images/japan/江之岛-2.jpg)\n\n通过大桥前往江之岛就，在半山腰上可以看到咲太与学妹约会的高潮部分的取景的\n\n![](/images/japan/江之岛-3.jpg)\n\n> [🔔]注意\n>\n> 江之岛也是孤独摇滚的取景地，这里也放两张图🤪🤪🤪\n\n![](/images/japan/孤独摇滚-1.jpg)\n\n![](/images/japan/孤独摇滚-2.jpg)\n\n## **腰越（镰仓高校方向**）\n\n从江之岛离开后往镰仓高校方向走，差不多位于腰越和镰仓高校前两个车站之间就可以看到动漫op 咲太追电车的场景\n![](/images/japan/腰越.jpg)\n\n## **七里ヶ浜駅**\n\n从镰仓高校站坐车前往七里滨站，就可以看到咲太每次下午回家以及早上去学校所经过的车站ーー七里ヶ浜駅\n\n![](/images/japan/七里滨-6.jpg)\n\n![](/images/japan/七里滨-5.jpg)\n\n![](/images/japan/七里滨-4.jpg)\n\n## **七里ヶ浜海岸**\n\n从车站出来后往海边走就可以到达当地著名的旅游景点七里ヶ浜海岸，这里的有一条流入大海的小河以及阶梯都是动漫内经典的场景（可惜沙子跟动漫内不一样，不是金色的\n\n![](/images/japan/七里滨-3.jpg)\n\n![](/images/japan/七里滨-2.jpg)\n\n![](/images/japan/七里滨-1.jpg)\n\n> 至此整个圣地旅程就已经结束，虽然没有去藤泽市内的图书馆等圣地，但整个行程还是挺有意思的。然后唯一的遗憾就是自主贩卖机上的没有贩卖学姐所代言的桃子汽水了（😭😭😭\n\n![](/images/japan/桃子汽水.jpg)\n","tags":["二次元","猪头少年"],"categories":["旅游","圣地巡游"]},{"title":"hexo部署","url":"/a27e2ba2/","content":"\n## 依赖安装\n\n```bash\n#依赖软件 \nnode.js \ngit\n```\n\n[git下载](https://git-scm.com/downloads) \t\n\n[node.js下载](https://nodejs.org/en/download/package-manager/current)\n\n## 软件安装\n\n```bash\n#安装hexo\nnpm install -g hexo-cli\n#初始化\nhexo init <project-name>\ncd <project-name>\nnpm install\n#开启服务\nhexo server\n#生成静态文件\nhexo generate\n#部署网站\t如GitHub\nhexo deploy\n#发布新文章（demo）\nhexo new demo\n```\n\n## 安装主题（next）\n\n```bash\n#方法一\tnpm工具安装\nnpm install hexo-theme-next\n#方法二\tclone项目\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n#修改根目录的配置文件\nnano _config.yml\n#修改theme\ntheme: next\n```\n\n## 网站配置（根目录的_config.yml）\n\n### 网站基本设置\n\n```yaml\ntitle: ikula\t#博客主标题\t\t\t\t\t\t\nsubtitle: ''\t#博客副标题\ndescription: ''\t#博客描述\nkeywords: Linux,NAS,unraid,docker\t#博客的关键词\nauthor:\t\t\t#作者\nlanguage: zh-CN\t#语言\ntimezone: ''\t#时区\n```\n\n### 设置网站域名\n\n```yaml\n# URL\n# 部署到GitHub\t'https://username.github.io/project'\nurl: https://blog.ikula.top\nroot: /\n```\n\n### 设置主页\n\n```bash\n#在source目录下新建一个index.md文件\ntouch /source/index.md\n```\n\n```yaml\n#修该配置文件\nindex_generator:\n  path: ''\n#改为\nindex_generator:\n  path: 'default-index'\n\n```\n\n### 设置部署方式（GitHub）\n\n```yaml\n#修改deploy参数\ndeploy:\n  type: git\t\t\t\t\t\t\t\t\t#发布方式\n  repo: git@github.com:example/example.git\t#项目地址\n  branch: blog\t\t\t\t\t\t\t\t#项目分支\n```\n\n### 设置可插入表情包(可选)🤪\n\n```bash\n#安装markdown-it-emoji 插件\nnpm install markdown-it-emoji --save\n```\n\n```yaml\n#修改配置，添加如下内容\n\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-abbr\n    - markdown-it-footnote\n    - markdown-it-ins\n    - markdown-it-sub\n    - markdown-it-sup\n    - markdown-it-emoji  ## add emoji\n  anchors:\n    level: 2\n    collisionSuffix: 'v'\n    # If `true`, creates an anchor tag with a permalink besides the heading.\n    permalink: false  \n    permalinkClass: header-anchor\n    # The symbol used to make the permalink\n    permalinkSymbol: ¶\n```\n\n### 设置唯一文章链接（可选）\n\n安装hexo-abbrlink插件\n\n```bash\nnpm install hexo-abbrlink --save\n```\n\n修改配置文件\n\n```yaml\npermalink: post/:abbrlink.html\nabbrlink:\n  alg: crc32  # 算法：crc16(default) and crc32\n  rep: hex    # 进制：dec(default) and hex\n```\n\n## next主题设置\n\n### 代码显示主题更改\n\n> 网站配置文件（/_config.yml）\n>\n> 主题配置文件（/theme/next/_config.yml）\n\n```yaml\n#网站配置文件\nhighlight:\n  enable: true\n  ...\nprismjs:\n  enable: false\n  ...\n```\n\n```yaml\n#主题配置文件\ncodeblock:\n  ...\n  theme:\n    light: qtcreator-dark\n    dark: qtcreator-dark\n  ...\n```\n\n[效果预览](https://theme-next.js.org/highlight/)\n\n### 页面布局选项\n\n```yaml\n#切换标题左右显示\nsidebar:\n  # Sidebar position. Available values: left | right\n  position: right\n\n#设置头像\navatar:\n  # Replace the default image and set the url here.\n  url: /images/avatar.png\n```\n\n### 设置Google&bing搜索\n\n[google](https://www.google.com/webmasters/tools/)\n\n[bing](https://www.bing.com/webmasters/home)\n\n```yaml\ngoogle_site_verification: XXXXXXXXXXXXXXXXXXXXXXX\nbing_site_verification: XXXXXXXXXXXXXXXXXXXXXXX\n```\n\n","tags":["折腾"],"categories":["hexo","next","博客"]}]